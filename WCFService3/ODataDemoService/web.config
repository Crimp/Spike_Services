<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <connectionStrings>
    <add name="ApplicationServices" connectionString="User ID=Test4;Password=1tr.erweerT;Pooling=false;Data Source=minakov-w8;Initial Catalog=MainDemo_v12.1" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <!--for Custom authentication mode-->
    <!--<machineKey decryption="AES" decryptionKey="0CA3EFAF0F7A5E7A62681C0BF656EE0ECE31ACEE3E1023BA3FAD20EA5F199DE8" validation="SHA1" validationKey="BF5404525BDD2B09B6A3094AACB09D072C24524F9DE62168764FF0DCE537184F0535D5D9AD66DEDC97DC1ABFF7FA540B4DFD82E5BB196B95D15FF81F75AD5328" />-->
    <roleManager defaultProvider="AspNetWindowsTokenRoleProvider" />
    <compilation debug="true" targetFramework="4.0" />
    <membership>
      <providers>
        <clear />
        <add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>
    <profile>
      <providers>
        <clear />
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="ApplicationServices" applicationName="/" />
      </providers>
    </profile>
    <authentication mode="Windows" />
    <identity impersonate="false" />
  </system.web>
  <system.webServer>
    <httpProtocol>
      <!--Calling Cross Domain WCF Service using Jquery-->
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*" />
      </customHeaders>
    </httpProtocol>
    <!--<modules runAllManagedModulesForAllRequests="true">
      <add name="CustomAuthenticationModule" type="CustomAuthenticationModule" />
    </modules>-->
    <staticContent>
      <remove fileExtension=".cer" />
      <mimeMap fileExtension=".cer" mimeType="application/x-x509-ca-cert" />
    </staticContent>
  </system.webServer>
  <system.serviceModel>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" aspNetCompatibilityEnabled="true">
      <serviceActivations>
        <add relativeAddress="ODataDemoService/FormsAuthentication/AuthenticationService.svc" service="AuthenticationService" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <behaviors>
      <serviceBehaviors>
        <behavior name="MyBehaviour">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <!--<services>
      -->
    <!--The ADO.NET Data Services server supports only the WebHttpBinding-->
    <!--
      <service behaviorConfiguration="MyBehaviour" name="DemoODataDemoService">
        <endpoint binding="webHttpBinding" bindingConfiguration="ClientCertificateTransportSecurity_DataService" name="MyEndPoint" contract="System.Data.Services.IRequestHandler" />
      </service>
    </services>
    <bindings>
      -->
    <!--Настоятельно не рекомендую использовать Windows Authentication с WebHttpBinding из соображений производительности и нагрузки сети... Любой вызов сервиса превращается в три... А если учесть то, что не все вызовы являются методами GET, иногда есть еще и POST методы с массивным message body. Это body будет гоняться по сети три раза из-за тупой реализации Windows Authentication в WCF-->
    <!--
      <webHttpBinding>
        <binding name="ClientCertificateTransportSecurity_DataService">
          <security mode="Transport">
            <transport clientCredentialType="Windows" proxyCredentialType="Windows">
              <extendedProtectionPolicy policyEnforcement="Always"/>
            </transport>
          </security>
        </binding>
      </webHttpBinding>
    </bindings>-->
  </system.serviceModel>
</configuration>